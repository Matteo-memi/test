{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\matte\\\\OneDrive\\\\Desktop\\\\test\\\\client\\\\src\\\\screens\\\\AdminBookingScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Table, Tag, Space } from \"antd\";\nimport Loader from \"../components/Loader\";\nimport Error from \"../components/Error\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction AdminBookingScreen() {\n  _s();\n\n  const [bookings, setBookings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const columns = [{\n    title: \"transactionid\",\n    dataIndex: \"transactionid\",\n    key: \"transactionid\"\n  }, {\n    title: \"roomid\",\n    dataIndex: \"roomid\",\n    key: \"roomid\"\n  }, {\n    title: \"room\",\n    dataIndex: \"room\",\n    key: \"room\"\n  }, {\n    title: \"fromdate\",\n    dataIndex: \"fromdate\",\n    key: \"fromdate\"\n  }, {\n    title: \"todate\",\n    dataIndex: \"todate\",\n    key: \"todate\"\n  }, {\n    title: \"status\",\n    dataIndex: \"status\",\n    key: \"status\",\n    render: status => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: status === \"booked\" ? /*#__PURE__*/_jsxDEV(Tag, {\n        color: \"green\",\n        children: \"CONFERMATO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Tag, {\n        color: \"red\",\n        children: \"CANCELLATO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)\n  }];\n\n  async function fetchMyData() {\n    setError(\"\");\n    setLoading(true);\n\n    try {\n      const data = (await axios.post(\"/api/bookings/getallbookings\")).data;\n      setBookings(data);\n    } catch (error) {\n      console.log(error);\n      setError(error);\n    }\n\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    fetchMyData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row\",\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : error.length > 0 ? /*#__PURE__*/_jsxDEV(Error, {\n      msg: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-md-12\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        columns: columns,\n        dataSource: bookings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdminBookingScreen, \"GZ5AaMiWFca7kLmIJnpnlrIrkqM=\");\n\n_c = AdminBookingScreen;\nexport default AdminBookingScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminBookingScreen\");","map":{"version":3,"sources":["C:/Users/matte/OneDrive/Desktop/test/client/src/screens/AdminBookingScreen.js"],"names":["React","useState","useEffect","axios","Table","Tag","Space","Loader","Error","AdminBookingScreen","bookings","setBookings","loading","setLoading","error","setError","columns","title","dataIndex","key","render","status","fetchMyData","data","post","console","log","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Table, Tag, Space } from \"antd\";\n\nimport Loader from \"../components/Loader\";\nimport Error from \"../components/Error\";\n\nfunction AdminBookingScreen() {\n  const [bookings, setBookings] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const columns = [\n    {\n      title: \"transactionid\",\n      dataIndex: \"transactionid\",\n      key: \"transactionid\",\n    },\n    { title: \"roomid\", dataIndex: \"roomid\", key: \"roomid\" },\n    { title: \"room\", dataIndex: \"room\", key: \"room\" },\n    { title: \"fromdate\", dataIndex: \"fromdate\", key: \"fromdate\" },\n    { title: \"todate\", dataIndex: \"todate\", key: \"todate\" },\n    {\n      title: \"status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => (\n        <>\n          {status === \"booked\" ? (\n            <Tag color=\"green\">CONFERMATO</Tag>\n          ) : (\n            <Tag color=\"red\">CANCELLATO</Tag>\n          )}\n        </>\n      ),\n    },\n  ];\n\n  async function fetchMyData() {\n    setError(\"\");\n    setLoading(true);\n    try {\n      const data = (await axios.post(\"/api/bookings/getallbookings\")).data;\n      setBookings(data);\n    } catch (error) {\n      console.log(error);\n      setError(error);\n    }\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    fetchMyData();\n  }, []);\n  return (\n    <div className=\"row\">\n      {loading ? (\n        <Loader></Loader>\n      ) : error.length > 0 ? (\n        <Error msg={error}></Error>\n      ) : (\n        <div className=\"col-md-12\">\n          <Table columns={columns} dataSource={bookings} />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AdminBookingScreen;\n"]},"metadata":{},"sourceType":"module"}